services:
  api:
    container_name: S32EFV_api
    build:
      context: .
    environment:
      DB_URL: 'postgres://S32EFV:S32EFV@db:5432/S32EFV'
      S32EFV_PARSER: 'banco-guayaquil'
      S32EFV_SKIP: 12
    ports:
      - "3001:3000"
    depends_on:
      - db

  db:
    image: postgres:15
    container_name: S32EFV_postgres
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_USER: S32EFV
      POSTGRES_PASSWORD: S32EFV
      POSTGRES_DB: S32EFV
    restart: unless-stopped
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data

  grafana:
    image: grafana/grafana-oss
    container_name: S32EFV_grafana
    restart: unless-stopped
    environment:
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./configs/grafana/expenses-dashboard.yml:/etc/grafana/provisioning/dashboards/expenses-dashboard.yml
      - ./configs/grafana/postgres-datasource.yml:/etc/grafana/provisioning/datasources/postgres-datasource.yml
      - ./configs/grafana/expenses-dashboard.json:/etc/grafana/provisioning/dashboards/expenses-dashboard.json
    depends_on:
      - db

volumes:
  grafana-storage: {}
  postgres-data: {}
